<?php

namespace Tests\Feature;

use App\Models\Comment;
use App\Models\User;
use Faker\Factory;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Support\Facades\Redis;
use Tests\TestCase;

class CommentTest extends TestCase
{

    use RefreshDatabase;

    private static $user;

    protected function setUp(): void
    {
        parent::setUp();
    }

    protected function tearDown(): void
    {
        $keys = Redis::keys('*');
        $keys = str_ireplace("testing", '', $keys);
        Redis::del($keys);

        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_comment_SaveRecord(){
        try {
            $faker   = Factory::create();
            $uuid = $faker->uuid;
            $comment = [
                'id'      => $uuid,
                'title'   => $faker->realText(65),
                'text'    => $faker->realText(500),
                'user_id' => $faker->uuid,
                'likes'   => random_int(1, 1000)
            ];
            $saved = Comment::SaveRecord($comment);

            $comment = Comment::GetRecord($saved['id']);

            self::assertIsArray($comment);
            self::assertContains($uuid, $comment['comment']);
        }catch (\Exception $e){
            dd($e);
        }

    }

    public function test_comment_GetRecord(){

    }

    public function test_comment_UncacheRecord(){

    }

    public function test_comment_RecacheRecord(){

    }

    public function test_comment_updateLikes(){

    }

    public function test_comment_RemoveRecord(){

    }
}
